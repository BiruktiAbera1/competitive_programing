
from collections import Counter, defaultdict, OrderedDict, deque
from bisect import bisect_left, bisect_right 
from functools import reduce 
import string
true = True
false = False
class MyCircularDeque:

    def __init__(self, k: int):
        self.ds = [0] * 2020
        self.i = 1001
        self.j = 1002
        self.k = k
        

    def insertFront(self, value: int) -> bool:
        if self.j - self.i - 1 == self.k:
            return false 
        self.ds[self.i] = value 
        self.i -= 1
        return true 
        

    def insertLast(self, value: int) -> bool:
        if self.j - self.i - 1 == self.k: return false 
        self.ds[self.j] = value 
        self.j += 1
        return true  
        

    def deleteFront(self) -> bool:
        if self.i + 1 == self.j: return false 
        self.i += 1
        return true 

    def deleteLast(self) -> bool:
         if self.i + 1 == self.j: return false 
         self.j -= 1
         return true 

    def getFront(self) -> int:
        
        if self.i + 1 == self.j: return -1 
        return self.ds[self.i+1]
        

    def getRear(self) -> int:
                if self.i + 1 == self.j: return -1 
                return self.ds[self.j - 1]
        

    def isEmpty(self) -> bool:
         return self.i + 1 == self.j 
        

    def isFull(self) -> bool:
            return self.i + 1 + self.k == self.j 
        
